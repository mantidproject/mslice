# This is a basic workflow to help you get started with Actions

name: MSlice nightly build

# Controls when the action will run. 
on:
  schedule:
    - cron: "* 2 * * *"
    
  # temporary for development
  push:
    branches:
      - conda_workflow

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout MSlice
        uses: actions/checkout@v2
        with:
          ref: conda_workflow

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.1
        with:
          activate-environment: mslice
          environment-file: environment.yml
          python-version: 3.6
          auto-activate-base: false

      - name: Install Mantid
        run: |
          sudo apt-add-repository ppa:mantid/mantid -y && sudo apt-get update -qq
          sudo apt-get install gdebi -y
          export mantiddeb=$(curl -sL https://github.com/mantidproject/download.mantidproject.org/raw/master/releases/nightly.txt | grep ubuntu)
          wget http://downloads.sourceforge.net/project/mantid/Nightly/$mantiddeb -O /tmp/mtn.deb
          sudo gdebi --option=APT::Get::force-yes=1,APT::Get::Assume-Yes=1 -n /tmp/mtn.deb
          echo "PYTHONPATH=/opt/mantidnightly/bin:/opt/mantidnightly/lib" >> $GITHUB_ENV
          sudo apt-get install libglu1-mesa
          pip uninstall hdf5
          conda install hdf5

      - name: Flake8
        run: |
          python setup.py flake8

      - name: Nosetests
        run: |
          xvfb-run '--server-args=-screen 0 640x480x24' --auto-servernum python setup.py nosetests